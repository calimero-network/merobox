name: CI - Format Check & Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check code formatting
      run: |
        make format-check
    
    - name: Show formatting differences on failure
      if: failure()
      run: |
        echo "‚ùå Code formatting check failed!"
        echo "üí° To fix locally, run: make format"
        echo "üìã Showing differences:"
        make format-check || true

  test-merobox:
    runs-on: ubuntu-latest
    needs: format
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install merobox in development mode
      run: |
        pip install -e .
    
    - name: Test merobox CLI and workflow
      run: |
        merobox --version
        merobox --help
        merobox bootstrap run test-workflow.yml --verbose

  test-example-project:
    runs-on: ubuntu-latest
    needs: format
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install Docker
      uses: docker/setup-buildx-action@v3
    
    - name: Start Docker daemon
      run: |
        sudo systemctl start docker
        sudo docker --version
    
    - name: Install example project dependencies
      working-directory: ./example-project
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install example project in development mode
      working-directory: ./example-project
      run: |
        pip install -e .
    
    - name: Run all example project tests
      working-directory: ./example-project
      run: |
        echo "üß™ Running comprehensive test suite..."
        
        echo "üß™ Running basic integration tests..."
        python -m pytest tests/test_basic_integration.py -v --tb=short
        
        echo "üß™ Running clean syntax tests..."
        python -m pytest tests/test_clean_syntax.py -v --tb=short
        
        echo "üß™ Running workflow integration tests..."
        python -m pytest tests/test_workflow_integration.py -v --tb=short
        
        echo "‚úÖ All tests completed successfully!"
    
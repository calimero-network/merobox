name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-binaries:
    name: Build Binary - ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: macos
            arch: x64
            runner: macos-13
          - os: macos
            arch: arm64
            runner: macos-14
          - os: linux
            arch: x64
            runner: ubuntu-latest
          - os: linux
            arch: arm64
            runner: ubuntu-latest-arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Build executable
        run: python build_binary.py
      
      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Rename binary
        run: |
          cd dist
          mv merobox merobox-v${{ steps.version.outputs.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}
          mv merobox-*.sha256 merobox-v${{ steps.version.outputs.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.sha256
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: merobox-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            dist/merobox-*
          retention-days: 5

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build-binaries
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-binaries, publish-pypi]
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Prepare release files
        run: |
          mkdir -p release-files
          find artifacts -type f -exec cp {} release-files/ \;
          ls -la release-files/
      
      - name: Extract changelog
        id: changelog
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "Extracting changelog for version $VERSION"
          # Extract the section for this version from CHANGELOG.md
          awk -v version="$VERSION" '
            /^## \['"$VERSION"'\]/ {flag=1; next}
            /^## \[/ {flag=0}
            flag
          ' CHANGELOG.md > changelog-extract.md
          
          if [ -s changelog-extract.md ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            cat changelog-extract.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Release $VERSION" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Merobox ${{ steps.version.outputs.VERSION }}
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ### Installation
            
            #### Via pip (recommended)
            ```bash
            pip install merobox
            ```
            
            #### Via binary
            Download the appropriate binary for your platform:
            - **macOS (Intel)**: `merobox-${{ steps.version.outputs.VERSION }}-macos-x64`
            - **macOS (Apple Silicon)**: `merobox-${{ steps.version.outputs.VERSION }}-macos-arm64`
            - **Linux (x64)**: `merobox-${{ steps.version.outputs.VERSION }}-linux-x64`
            - **Linux (ARM64)**: `merobox-${{ steps.version.outputs.VERSION }}-linux-arm64`
            
            Make it executable:
            ```bash
            chmod +x merobox-*
            ./merobox-* --version
            ```
            
            ### Checksums
            SHA256 checksums are provided for each binary in the `.sha256` files.
            
            ### Links
            - [PyPI Package](https://pypi.org/project/merobox/${{ steps.version.outputs.VERSION }}/)
            - [Documentation](https://github.com/${{ github.repository }})
          files: release-files/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

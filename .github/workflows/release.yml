name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            target: darwin-x64
          - os: macos-latest
            arch: arm64
            target: darwin-arm64
          - os: ubuntu-latest
            arch: x64
            target: linux-x64
          - os: ubuntu-latest
            arch: arm64
            target: linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up QEMU (for ARM64 builds on x64 runners)
        if: matrix.arch == 'arm64' && matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile --name merobox merobox/cli.py

      - name: Test executable
        run: |
          ./dist/merobox --version

      - name: Name artifact uniquely
        shell: bash
        run: |
          set -euo pipefail
          ext=""
          [[ "${{ matrix.os }}" == "macos-latest" ]] && ext=""
          [[ "${{ matrix.os }}" == "ubuntu-latest" ]] && ext=""
          NAME="merobox-${{ github.ref_name }}-${{ matrix.target }}${ext}"
          mv "dist/merobox${ext}" "dist/${NAME}"

      - name: Generate checksum (portable)
        shell: bash
        run: |
          set -euo pipefail
          FILE="dist/merobox-${{ github.ref_name }}-${{ matrix.target }}"
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum "${FILE}" > "${FILE}.sha256"
          else
            shasum -a 256 "${FILE}" | awk '{print $1 "  " FILENAME}' FILENAME="${FILE##dist/}" > "${FILE}.sha256"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: merobox-${{ matrix.target }}
          path: |
            dist/merobox-${{ github.ref_name }}-${{ matrix.target }}
            dist/merobox-${{ github.ref_name }}-${{ matrix.target }}.sha256
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'

    steps:
      - name: Validate tag format
        run: |
          if [[ ! "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid tag format. Expected: vX.Y.Z (e.g., v1.0.0)"
            echo "Current tag: ${{ github.ref }}"
            exit 1
          fi
          echo "✅ Tag format is valid: ${{ github.ref }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts to release-assets
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          pattern: merobox-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

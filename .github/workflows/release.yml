name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            target: darwin-x64
          - os: macos-latest
            arch: arm64
            target: darwin-arm64
          - os: ubuntu-latest
            arch: x64
            target: linux-x64
          - os: ubuntu-latest
            arch: arm64
            target: linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up QEMU (for ARM64 builds on x64 runners)
        if: matrix.arch == 'arm64' && matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile --name merobox merobox/cli.py

      - name: Test executable
        run: |
          ./dist/merobox --version

      - name: Generate checksum
        run: |
          sha256sum dist/merobox > dist/merobox-${{ matrix.target }}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: merobox-${{ matrix.target }}
          path: |
            dist/merobox*
            dist/*.sha256
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'

    steps:
      - name: Validate tag format
        run: |
          if [[ ! "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid tag format. Expected: vX.Y.Z (e.g., v1.0.0)"
            echo "Current tag: ${{ github.ref }}"
            exit 1
          fi
          echo "✅ Tag format is valid: ${{ github.ref }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          for dir in artifacts/*/; do
            target=$(basename "$dir")
            cp "$dir"/* release-assets/
          done
          
          # Rename files to include version
          VERSION=${GITHUB_REF#refs/tags/v}
          for file in release-assets/*; do
            if [[ "$file" == *".sha256" ]]; then
              continue
            fi
            newname="merobox-v${VERSION}-$(basename "$file" | sed 's/merobox-//')"
            mv "$file" "release-assets/$newname"
          done
          
          # Update checksum files with new names
          for checksum in release-assets/*.sha256; do
            if [[ -f "$checksum" ]]; then
              oldname=$(basename "$(cat "$checksum" | cut -d' ' -f2)")
              newname=$(basename "$checksum" .sha256)
              sed -i "s|$oldname|$newname|g" "$checksum"
            fi
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
